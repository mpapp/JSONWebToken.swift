// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"JWT::JWTPackageTests::ProductTarget" /* JWTPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_89 /* Build configuration list for PBXAggregateTarget "JWTPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_92 /* PBXTargetDependency */,
				OBJ_93 /* PBXTargetDependency */,
			);
			name = JWTPackageTests;
			productName = JWTPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_100 /* CompactJSONDecoderTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* CompactJSONDecoderTests.swift */; };
		OBJ_101 /* CompactJSONEncoderTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_29 /* CompactJSONEncoderTests.swift */; };
		OBJ_102 /* IntegrationTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_30 /* IntegrationTests.swift */; };
		OBJ_103 /* JWTDecodeTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_31 /* JWTDecodeTests.swift */; };
		OBJ_104 /* JWTEncodeTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_32 /* JWTEncodeTests.swift */; };
		OBJ_105 /* PayloadTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_33 /* PayloadTests.swift */; };
		OBJ_107 /* JWT.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "JWT::JWT::Product" /* JWT.framework */; };
		OBJ_108 /* JWA.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "JWT::JWA::Product" /* JWA.framework */; };
		OBJ_49 /* HMAC.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* HMAC.swift */; };
		OBJ_50 /* HMACCommonCrypto.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* HMACCommonCrypto.swift */; };
		OBJ_51 /* JWA.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_23 /* JWA.swift */; };
		OBJ_52 /* None.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* None.swift */; };
		OBJ_59 /* HMACTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_35 /* HMACTests.swift */; };
		OBJ_60 /* NoneTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_36 /* NoneTests.swift */; };
		OBJ_62 /* JWA.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "JWT::JWA::Product" /* JWA.framework */; };
		OBJ_69 /* Algorithm.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* Algorithm.swift */; };
		OBJ_70 /* Base64.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* Base64.swift */; };
		OBJ_71 /* ClaimSet.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* ClaimSet.swift */; };
		OBJ_72 /* Claims.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* Claims.swift */; };
		OBJ_73 /* CompactJSONDecoder.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* CompactJSONDecoder.swift */; };
		OBJ_74 /* CompactJSONEncoder.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* CompactJSONEncoder.swift */; };
		OBJ_75 /* Decode.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* Decode.swift */; };
		OBJ_76 /* Encode.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* Encode.swift */; };
		OBJ_77 /* JOSEHeader.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* JOSEHeader.swift */; };
		OBJ_78 /* JWT.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* JWT.swift */; };
		OBJ_80 /* JWA.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "JWT::JWA::Product" /* JWA.framework */; };
		OBJ_87 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_99 /* ClaimSetTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* ClaimSetTests.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		534A720E20A1FEA800EDBF2C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "JWT::JWA";
			remoteInfo = JWA;
		};
		534A720F20A1FEA800EDBF2C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "JWT::JWA";
			remoteInfo = JWA;
		};
		534A721020A1FEA800EDBF2C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "JWT::JWT";
			remoteInfo = JWT;
		};
		534A721120A1FEA800EDBF2C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "JWT::JWA";
			remoteInfo = JWA;
		};
		534A721220A1FEA900EDBF2C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "JWT::JWATests";
			remoteInfo = JWATests;
		};
		534A721320A1FEA900EDBF2C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "JWT::JWTTests";
			remoteInfo = JWTTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		"JWT::JWA::Product" /* JWA.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = JWA.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"JWT::JWATests::Product" /* JWATests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; path = JWATests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		"JWT::JWT::Product" /* JWT.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = JWT.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"JWT::JWTTests::Product" /* JWTTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; path = JWTTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* Base64.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Base64.swift; sourceTree = "<group>"; };
		OBJ_11 /* ClaimSet.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ClaimSet.swift; sourceTree = "<group>"; };
		OBJ_12 /* Claims.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Claims.swift; sourceTree = "<group>"; };
		OBJ_13 /* CompactJSONDecoder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CompactJSONDecoder.swift; sourceTree = "<group>"; };
		OBJ_14 /* CompactJSONEncoder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CompactJSONEncoder.swift; sourceTree = "<group>"; };
		OBJ_15 /* Decode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Decode.swift; sourceTree = "<group>"; };
		OBJ_16 /* Encode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Encode.swift; sourceTree = "<group>"; };
		OBJ_17 /* JOSEHeader.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JOSEHeader.swift; sourceTree = "<group>"; };
		OBJ_18 /* JWT.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JWT.swift; sourceTree = "<group>"; };
		OBJ_21 /* HMAC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMAC.swift; sourceTree = "<group>"; };
		OBJ_22 /* HMACCommonCrypto.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMACCommonCrypto.swift; sourceTree = "<group>"; };
		OBJ_23 /* JWA.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JWA.swift; sourceTree = "<group>"; };
		OBJ_24 /* None.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = None.swift; sourceTree = "<group>"; };
		OBJ_27 /* ClaimSetTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ClaimSetTests.swift; sourceTree = "<group>"; };
		OBJ_28 /* CompactJSONDecoderTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CompactJSONDecoderTests.swift; sourceTree = "<group>"; };
		OBJ_29 /* CompactJSONEncoderTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CompactJSONEncoderTests.swift; sourceTree = "<group>"; };
		OBJ_30 /* IntegrationTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IntegrationTests.swift; sourceTree = "<group>"; };
		OBJ_31 /* JWTDecodeTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JWTDecodeTests.swift; sourceTree = "<group>"; };
		OBJ_32 /* JWTEncodeTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JWTEncodeTests.swift; sourceTree = "<group>"; };
		OBJ_33 /* PayloadTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PayloadTests.swift; sourceTree = "<group>"; };
		OBJ_35 /* HMACTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMACTests.swift; sourceTree = "<group>"; };
		OBJ_36 /* NoneTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NoneTests.swift; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* Algorithm.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Algorithm.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_106 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_107 /* JWT.framework in Frameworks */,
				OBJ_108 /* JWA.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_53 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_61 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_62 /* JWA.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_79 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_80 /* JWA.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_19 /* JWA */ = {
			isa = PBXGroup;
			children = (
				OBJ_20 /* HMAC */,
				OBJ_23 /* JWA.swift */,
				OBJ_24 /* None.swift */,
			);
			name = JWA;
			path = Sources/JWA;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_20 /* HMAC */ = {
			isa = PBXGroup;
			children = (
				OBJ_21 /* HMAC.swift */,
				OBJ_22 /* HMACCommonCrypto.swift */,
			);
			path = HMAC;
			sourceTree = "<group>";
		};
		OBJ_25 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_26 /* JWTTests */,
				OBJ_34 /* JWATests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_26 /* JWTTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_27 /* ClaimSetTests.swift */,
				OBJ_28 /* CompactJSONDecoderTests.swift */,
				OBJ_29 /* CompactJSONEncoderTests.swift */,
				OBJ_30 /* IntegrationTests.swift */,
				OBJ_31 /* JWTDecodeTests.swift */,
				OBJ_32 /* JWTEncodeTests.swift */,
				OBJ_33 /* PayloadTests.swift */,
			);
			name = JWTTests;
			path = Tests/JWTTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_34 /* JWATests */ = {
			isa = PBXGroup;
			children = (
				OBJ_35 /* HMACTests.swift */,
				OBJ_36 /* NoneTests.swift */,
			);
			name = JWATests;
			path = Tests/JWATests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_38 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_39 /* Products */ = {
			isa = PBXGroup;
			children = (
				"JWT::JWATests::Product" /* JWATests.xctest */,
				"JWT::JWT::Product" /* JWT.framework */,
				"JWT::JWTTests::Product" /* JWTTests.xctest */,
				"JWT::JWA::Product" /* JWA.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_25 /* Tests */,
				OBJ_38 /* Dependencies */,
				OBJ_39 /* Products */,
			);
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* JWT */,
				OBJ_19 /* JWA */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* JWT */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* Algorithm.swift */,
				OBJ_10 /* Base64.swift */,
				OBJ_11 /* ClaimSet.swift */,
				OBJ_12 /* Claims.swift */,
				OBJ_13 /* CompactJSONDecoder.swift */,
				OBJ_14 /* CompactJSONEncoder.swift */,
				OBJ_15 /* Decode.swift */,
				OBJ_16 /* Encode.swift */,
				OBJ_17 /* JOSEHeader.swift */,
				OBJ_18 /* JWT.swift */,
			);
			name = JWT;
			path = Sources/JWT;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"JWT::JWA" /* JWA */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_45 /* Build configuration list for PBXNativeTarget "JWA" */;
			buildPhases = (
				OBJ_48 /* Sources */,
				OBJ_53 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = JWA;
			productName = JWA;
			productReference = "JWT::JWA::Product" /* JWA.framework */;
			productType = "com.apple.product-type.framework";
		};
		"JWT::JWATests" /* JWATests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_55 /* Build configuration list for PBXNativeTarget "JWATests" */;
			buildPhases = (
				OBJ_58 /* Sources */,
				OBJ_61 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_63 /* PBXTargetDependency */,
			);
			name = JWATests;
			productName = JWATests;
			productReference = "JWT::JWATests::Product" /* JWATests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"JWT::JWT" /* JWT */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_65 /* Build configuration list for PBXNativeTarget "JWT" */;
			buildPhases = (
				OBJ_68 /* Sources */,
				OBJ_79 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_81 /* PBXTargetDependency */,
			);
			name = JWT;
			productName = JWT;
			productReference = "JWT::JWT::Product" /* JWT.framework */;
			productType = "com.apple.product-type.framework";
		};
		"JWT::JWTTests" /* JWTTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_95 /* Build configuration list for PBXNativeTarget "JWTTests" */;
			buildPhases = (
				OBJ_98 /* Sources */,
				OBJ_106 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_109 /* PBXTargetDependency */,
				OBJ_110 /* PBXTargetDependency */,
			);
			name = JWTTests;
			productName = JWTTests;
			productReference = "JWT::JWTTests::Product" /* JWTTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"JWT::SwiftPMPackageDescription" /* JWTPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_83 /* Build configuration list for PBXNativeTarget "JWTPackageDescription" */;
			buildPhases = (
				OBJ_86 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = JWTPackageDescription;
			productName = JWTPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
				TargetAttributes = {
					"JWT::JWA" = {
						LastSwiftMigration = 1020;
					};
					"JWT::JWATests" = {
						LastSwiftMigration = 1020;
					};
					"JWT::JWT" = {
						LastSwiftMigration = 1020;
					};
					"JWT::JWTTests" = {
						LastSwiftMigration = 1020;
					};
				};
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "JWT" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				English,
				en,
			);
			mainGroup = OBJ_5;
			productRefGroup = OBJ_39 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"JWT::JWA" /* JWA */,
				"JWT::JWATests" /* JWATests */,
				"JWT::JWT" /* JWT */,
				"JWT::SwiftPMPackageDescription" /* JWTPackageDescription */,
				"JWT::JWTPackageTests::ProductTarget" /* JWTPackageTests */,
				"JWT::JWTTests" /* JWTTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_48 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_49 /* HMAC.swift in Sources */,
				OBJ_50 /* HMACCommonCrypto.swift in Sources */,
				OBJ_51 /* JWA.swift in Sources */,
				OBJ_52 /* None.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_58 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_59 /* HMACTests.swift in Sources */,
				OBJ_60 /* NoneTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_68 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_69 /* Algorithm.swift in Sources */,
				OBJ_70 /* Base64.swift in Sources */,
				OBJ_71 /* ClaimSet.swift in Sources */,
				OBJ_72 /* Claims.swift in Sources */,
				OBJ_73 /* CompactJSONDecoder.swift in Sources */,
				OBJ_74 /* CompactJSONEncoder.swift in Sources */,
				OBJ_75 /* Decode.swift in Sources */,
				OBJ_76 /* Encode.swift in Sources */,
				OBJ_77 /* JOSEHeader.swift in Sources */,
				OBJ_78 /* JWT.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_86 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_87 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_98 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_99 /* ClaimSetTests.swift in Sources */,
				OBJ_100 /* CompactJSONDecoderTests.swift in Sources */,
				OBJ_101 /* CompactJSONEncoderTests.swift in Sources */,
				OBJ_102 /* IntegrationTests.swift in Sources */,
				OBJ_103 /* JWTDecodeTests.swift in Sources */,
				OBJ_104 /* JWTEncodeTests.swift in Sources */,
				OBJ_105 /* PayloadTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_109 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "JWT::JWT" /* JWT */;
			targetProxy = 534A721020A1FEA800EDBF2C /* PBXContainerItemProxy */;
		};
		OBJ_110 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "JWT::JWA" /* JWA */;
			targetProxy = 534A721120A1FEA800EDBF2C /* PBXContainerItemProxy */;
		};
		OBJ_63 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "JWT::JWA" /* JWA */;
			targetProxy = 534A720F20A1FEA800EDBF2C /* PBXContainerItemProxy */;
		};
		OBJ_81 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "JWT::JWA" /* JWA */;
			targetProxy = 534A720E20A1FEA800EDBF2C /* PBXContainerItemProxy */;
		};
		OBJ_92 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "JWT::JWATests" /* JWATests */;
			targetProxy = 534A721220A1FEA900EDBF2C /* PBXContainerItemProxy */;
		};
		OBJ_93 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "JWT::JWTTests" /* JWTTests */;
			targetProxy = 534A721320A1FEA900EDBF2C /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_INCLUDE_PATHS = CommonCrypto;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_INCLUDE_PATHS = CommonCrypto;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				SWIFT_VERSION = 5.0;
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_46 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-5718070938381968625",
				);
				INFOPLIST_FILE = JWT.xcodeproj/JWA_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = JWA;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWA;
			};
			name = Debug;
		};
		OBJ_47 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-5718070938381968625",
				);
				INFOPLIST_FILE = JWT.xcodeproj/JWA_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = JWA;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWA;
			};
			name = Release;
		};
		OBJ_56 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-5718070938381968625",
				);
				INFOPLIST_FILE = JWT.xcodeproj/JWATests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWATests;
			};
			name = Debug;
		};
		OBJ_57 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-5718070938381968625",
				);
				INFOPLIST_FILE = JWT.xcodeproj/JWATests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWATests;
			};
			name = Release;
		};
		OBJ_66 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-5718070938381968625",
				);
				INFOPLIST_FILE = JWT.xcodeproj/JWT_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = JWT;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWT;
			};
			name = Debug;
		};
		OBJ_67 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-5718070938381968625",
				);
				INFOPLIST_FILE = JWT.xcodeproj/JWT_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = JWT;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWT;
			};
			name = Release;
		};
		OBJ_84 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_85 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		OBJ_90 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_91 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_96 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-5718070938381968625",
				);
				INFOPLIST_FILE = JWT.xcodeproj/JWTTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWTTests;
			};
			name = Debug;
		};
		OBJ_97 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-5718070938381968625",
				);
				INFOPLIST_FILE = JWT.xcodeproj/JWTTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWTTests;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "JWT" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_45 /* Build configuration list for PBXNativeTarget "JWA" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_46 /* Debug */,
				OBJ_47 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_55 /* Build configuration list for PBXNativeTarget "JWATests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_56 /* Debug */,
				OBJ_57 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_65 /* Build configuration list for PBXNativeTarget "JWT" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_66 /* Debug */,
				OBJ_67 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_83 /* Build configuration list for PBXNativeTarget "JWTPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_84 /* Debug */,
				OBJ_85 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_89 /* Build configuration list for PBXAggregateTarget "JWTPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_90 /* Debug */,
				OBJ_91 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_95 /* Build configuration list for PBXNativeTarget "JWTTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_96 /* Debug */,
				OBJ_97 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
